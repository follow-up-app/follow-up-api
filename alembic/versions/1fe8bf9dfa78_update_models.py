"""update models

Revision ID: 1fe8bf9dfa78
Revises: 7d4d6015a63c
Create Date: 2024-11-17 02:33:05.248124

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1fe8bf9dfa78'
down_revision = '7d4d6015a63c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('company_invoice_logs')
    op.add_column('companies', sa.Column('municipal_registration', sa.String(length=50), nullable=True))
    op.add_column('companies', sa.Column('city_code', sa.String(length=50), nullable=True))
    op.add_column('companies', sa.Column('aliquot', sa.String(length=50), nullable=True))
    op.add_column('companies', sa.Column('item_list_service', sa.String(length=50), nullable=True))
    op.add_column('companies', sa.Column('municipal_tax_code', sa.String(length=50), nullable=True))
    op.add_column('companies', sa.Column('api_nfes_token', sa.String(length=50), nullable=True))
    op.add_column('contract_address', sa.Column('city_code', sa.String(length=255), nullable=True))
    op.add_column('health_plans', sa.Column('municipal_registration', sa.String(length=255), nullable=True))
    op.drop_column('invoices', 'status')
    op.add_column('specialties', sa.Column('code_nfes', sa.String(length=100), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('specialties', 'code_nfes')
    op.add_column('invoices', sa.Column('status', postgresql.ENUM('NOT_FOUND', 'CANCELED', 'NOT_AUTHORIZED', 'INVALID_REQUEST', 'COMPANY_NOT_QUALIFIED', 'CERTIFICATE_EXPIRED', 'AUTHORIZED', 'IN_PROCESS', name='invoiceenum'), autoincrement=False, nullable=True))
    op.drop_column('health_plans', 'municipal_registration')
    op.drop_column('contract_address', 'city_code')
    op.drop_column('companies', 'api_nfes_token')
    op.drop_column('companies', 'municipal_tax_code')
    op.drop_column('companies', 'item_list_service')
    op.drop_column('companies', 'aliquot')
    op.drop_column('companies', 'city_code')
    op.drop_column('companies', 'municipal_registration')
    op.create_table('company_invoice_logs',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('company_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('city_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('aliquot', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('item_list_service', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('municipal_tax_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='company_invoice_logs_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_invoice_logs_pkey')
    )
    # ### end Alembic commands ###
