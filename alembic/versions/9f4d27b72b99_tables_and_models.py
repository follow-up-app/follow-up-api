"""tables and models

Revision ID: 9f4d27b72b99
Revises: ebaf4f8b3aee
Create Date: 2022-04-24 16:39:51.401449

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '9f4d27b72b99'
down_revision = 'ebaf4f8b3aee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('programs',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('company_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('objetive', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procedures',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('program_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('mark', sa.Enum('PLAY', 'ECHOIC', 'WRITING', 'GROUP', 'IMITATION', 'INTRAVERBAL', 'READING', 'LINGUISTICS', 'LRFFC', 'COMMAND', 'MATHEMATICS', 'LISTENER', 'PV_MTS', 'SOCIAL', 'TACT', 'VOCAL', name='markprocedure'), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('stimulus', sa.String(length=255), nullable=False),
    sa.Column('orientation_executation', sa.String(length=255), nullable=False),
    sa.Column('orientation_partial_executation', sa.String(length=255), nullable=True),
    sa.Column('points_total', sa.Integer(), nullable=False),
    sa.Column('points_partial', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('company_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('parent', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('fullname', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['parent'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grids',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('program_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('student_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('aplicator', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'PAUSED', 'CANCELED', 'DONE', name='statusgrid'), nullable=False),
    sa.ForeignKeyConstraint(['aplicator'], ['users.id'], ),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('procedure_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('student_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('points_made', sa.Integer(), nullable=False),
    sa.Column('anotations', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['procedure_id'], ['procedures.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('results')
    op.drop_table('grids')
    op.drop_table('students')
    op.drop_table('procedures')
    op.drop_table('programs')
    # ### end Alembic commands ###
